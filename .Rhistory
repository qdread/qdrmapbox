path.expand('~')
usethis::use_package('glue')
usethis::use_package('curl')
usethis::use_package('gdalUtils')
usethis::use_package('purrr')
devtools::document()
usethis::use_ccby_license()
library(mapview)
library(stars)
lc <- read_stars(system.file('tif/lc.tif',package='stars'))
lc
plot(lc)
mapview(lc)
traceback()
knitr::opts_chunk$set(echo = TRUE)
load("~/Documents/GitHub/sesync_repos/Mariculture_Team/Gulf_Suitability/Input_Data/ssm_rc.rda")
mapview(ssm_rc)
## mariculture siting raster (ssm)
load("~/Documents/GitHub/sesync_repos/Mariculture_Team/Gulf_Suitability/Input_Data/effort_sum.rda")
mapview(effort_sum)
effortstars <- as(effort_sum,'stars')
st_as_stars(effort_sum)
effortstars <- st_as_stars(effort_sum)
mapview(effortstars)
lc
mapview(lc)
lc
lc[[1]]
as.numeric(lc)
lc
as.numeric(lc[[1]])
lc[[1]]
lcval <- lc[[1]]
class(lcval)
str(lcval)
lcvalnum <- as.numeric(lcval)
str(lcvalnum)
lcval
class(lc[[1]]) <- 'numeric'
lc
mapview(lc)
lc <- read_stars(system.file('tif/lc.tif',package='stars'))
mapview(lc)
sessionInfo()
devtools::document()
devtools::document()
library(qdrmapbox)
library(qdrmapbox)
# Define zoom and map corners
zoom <- 8
upper_left <- c(39.8, -79.5)
lower_right <- c(37.8, -74.8)
tile_numbers_mat <- find_tile_numbers(zoom = zoom, upper_left = upper_left, lower_right = lower_right)
tile_numbers_mat
download_mapbox_tiles
Sys.glob('~/Documents/temp/mdtiles/*.tif')
Sys.glob(path.expand('~/Documents/temp/mdtiles/*.tif'))
path.expand('~/Documents/temp/mdtiles/*.tif')
devtools::document()
library(qdrmapbox)
library(glue)
library(qdrmapbox)
set_mapbox_api_key('~/Documents/mapboxapikey.txt')
# Define zoom and map corners
zoom <- 8
upper_left <- c(39.8, -79.5)
lower_right <- c(37.8, -74.8)
md_tile_index <- find_tile_numbers(zoom = zoom, upper_left = upper_left, lower_right = lower_right)
md_tile_index # 8 tiles are needed.
download_dir <- '~/mdtiles'
dir.exists(download_dir)
library(qdrmapbox)
library(glue)
set_mapbox_api_key('~/Documents/mapboxapikey.txt')
# Define zoom and map corners
zoom <- 8
upper_left <- c(39.8, -79.5)
lower_right <- c(37.8, -74.8)
md_tile_index <- find_tile_numbers(zoom = zoom, upper_left = upper_left, lower_right = lower_right)
md_tile_index # 8 tiles are needed.
download_dir <- '~/mdtiles'
md_tile_df <- download_mapbox_tiles(tile_numbers_mat = md_tile_index, download_dir = download_dir, resolution = 'high', jpg_quality = 90)
dir.exists(download_dir)
md_tile_df[1:2, ]
georeference_all_tiles(md_tile_df)
build_virtual_raster(md_tile_df, glue::glue('{download_dir}/mdimage.vrt'))
library(sf)
library(raster)
library(USAboundaries)
library(ggspatial)
library(ggplot2)
mdimage_raster <- stack(glue('{download_dir}/mdimage.vrt'))
md_counties <- us_counties(resolution = 'high', states = 'MD')
md_cities <- us_cities(states = 'MD')
ggplot() +
annotation_spatial(data = mdimage_raster, alpha = 0.9) +
geom_sf(data = st_geometry(md_counties), color = 'white', fill = NA) +
geom_sf(data = md_cities, aes(color = population), size = 2) +
coord_sf(crs = 3857) +
annotation_scale(text_col = 'white') +
scale_color_viridis_c(trans = 'log10', labels = function(x) format(x, scientific = FALSE))
devtools::document()
md_tile_index
head(md_tile_df, 2)
2^8
ggsave('~/Documents/temp/marylandmapbox.png', dpi = 300)
ggsave('~/Documents/temp/marylandmapbox.png', dpi = 200, height = 6)
ggsave('~/Documents/temp/marylandmapbox.png', dpi = 200, width = 8, height = 6)
library(ggplot2)
library(tmap)
library(sf)
data(NLD_prov)
origin_data <- NLD_prov %>%
st_set_geometry(NULL) %>%
mutate(FID= factor(1:n())) %>%
select(FID, origin_native, origin_west, origin_non_west) %>%
gather(key=origin, value=perc, origin_native, origin_west, origin_non_west, factor_key=TRUE)
library(dplyr)
origin_data <- NLD_prov %>%
st_set_geometry(NULL) %>%
mutate(FID= factor(1:n())) %>%
select(FID, origin_native, origin_west, origin_non_west) %>%
gather(key=origin, value=perc, origin_native, origin_west, origin_non_west, factor_key=TRUE)
library(tidyr)
data(NLD_prov)
origin_data <- NLD_prov %>%
st_set_geometry(NULL) %>%
mutate(FID= factor(1:n())) %>%
select(FID, origin_native, origin_west, origin_non_west) %>%
gather(key=origin, value=perc, origin_native, origin_west, origin_non_west, factor_key=TRUE)
origin_cols <- get_brewer_pal("Dark2", 3)
library(RColorBrewer)
origin_cols <- get_brewer_pal("Dark2", 3)
?remotes::install_github
library(tmaptools)
library(ggplot2)
library(dplyr)
library(tidyr)
library(tmap)
library(sf)
data(NLD_prov)
origin_data <- NLD_prov %>%
st_set_geometry(NULL) %>%
mutate(FID= factor(1:n())) %>%
select(FID, origin_native, origin_west, origin_non_west) %>%
gather(key=origin, value=perc, origin_native, origin_west, origin_non_west, factor_key=TRUE)
origin_cols <- get_brewer_pal("Dark2", 3)
grobs <- lapply(split(origin_data, origin_data$FID), function(x) {
ggplotGrob(ggplot(x, aes(x="", y=-perc, fill=origin)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
scale_y_continuous(expand=c(0,0)) +
scale_fill_manual(values=origin_cols) +
theme_ps(plot.axes = FALSE))
})
names(grobs) <- NLD_prov$name
tm_shape(NLD_prov) +
tm_polygons(group = "Provinces") +
tm_symbols(size=1, shape="name",
shapes=grobs,
scale=1,
legend.shape.show = FALSE,
shapes.legend = 22) +
tm_add_legend(type="fill",
col=origin_cols,
labels=c("Native", "Western", "Non-western"),
title="Origin") +
tm_format("NLD")
grobs[[1]]
grid.draw(grobs[[1]])
grid::grid.draw(grobs[[1]])
grid.newpage()
library(grid)
grid.newpage()
grid::grid.draw(grobs[[1]])
?tm_symbols
tm_shape(NLD_prov) +
tm_polygons(group = "Provinces") +
tm_symbols(size=1, shape="name",
shapes=grobs,
scale=1,
legend.shape.show = FALSE,
shapes.legend = 22, border.lwd = NA) +
tm_add_legend(type="fill",
col=origin_cols,
labels=c("Native", "Western", "Non-western"),
title="Origin") +
tm_format("NLD")
